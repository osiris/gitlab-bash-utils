#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2022 Osiris Alejandro Gomez <osiux@osiux.com>
# Copyright (C) 2022 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck source=/dev/null
# shellcheck disable=SC2016
# shellcheck disable=SC2001

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/gl-src-common"

function usage()
{
cat << EOF

## \`$BIN\` Insert note in _Issue_ converting hh:mm time format into \`/spend\` time

### Usage

\`\`\`bash

  $BIN ISSUE_ID

\`\`\`

### Example

\`\`\`bash

  $BIN 1234

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

if [[ ! -t 0 ]]
then
  TMPI="$(mktemp)"

  true > "$TMPI"

  while IFS= read -r PIPED_INPUT
  do
    echo "$PIPED_INPUT" >> "$TMPI"
  done

fi

[[ -n "$REPO_REGEX" ]] || REPO_REGEX='[a-z0-9_\-]+#[0-9]+'

if [[ -e "$TMPI" ]]
then
  INPUT_ID="$(head -1 "$TMPI" | grep -Eo '#[0-9]+' | tr -d '#')"
  REPO_ID="$(head -1 "$TMPI" | grep -Eo "$REPO_REGEX" | cut -d '#' -f1)"
  REPO_DIR="$(basename "$PWD")"
  [[ -n "$ISSUE_ID" ]] || ISSUE_ID="$INPUT_ID"
  BODY="$(tail -n+2 "$TMPI" | head -n -1 | sed 's/`/\\`/g' | sed 's/"/\\"/g')"
  INPUT_TIME="$(tail  -1 "$TMPI" | grep -Eo '[0-9]{2}:[0-9]{2}')"
  [[ -z "$INPUT_TIME" ]] || TIME="$INPUT_TIME"
else
  ISSUE_ID="$1"
  BODY="$2"
  TIME="$3"
fi

ISSUE_REGEX='[0-9]+'
[[ -z "$ISSUE_ID" ]] && die "EMPTY ISSUE_ID"
[[ "$ISSUE_ID" =~ $ISSUE_REGEX ]] || die "INVALID ISSUE_ID: $ISSUE_ID"

if [[ -n "$REPO_DIR" ]]
then
  if [[ "$REPO_DIR" != "$REPO_ID" ]]
  then
    die "NOT MATCH $REPO_ID#$ISSUE_ID WITH CURRENT DIRECTORY $REPO_DIR"
  fi
fi

SPEND_REGEX='[0-9]{2}:[0-9]{2}'
[[ -z "$TIME"     ]] && die "EMPTY TIME"
SPEND="$(echo "$TIME" | time2spend)"

[[ "$TIME" =~ $SPEND_REGEX ]] || die "INVALID TIME FORMAT: $SPEND"

TMP="$(mktemp)"
echo "$BODY"  | sed 's/\$/\\$/g' >  "$TMP"
echo "$SPEND" >> "$TMP"
# FIXME validate local project with ISSUE_ID
printf "send %s to Issue %s\\n" "$SPEND" "$ISSUE_ID"
gl issue note "$ISSUE_ID" --message "$(sed 's/`/\`/g' "$TMP")"

rm -f "$TMP"
